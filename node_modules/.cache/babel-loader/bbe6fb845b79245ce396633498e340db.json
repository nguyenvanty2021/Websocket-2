{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenty/Desktop/webSocketClient/src/index.js\";\nimport ReactDOM from \"react-dom\";\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Card, Avatar, Input, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nconst {\n  Search\n} = Input;\nconst {\n  Text\n} = Typography;\nconst {\n  Meta\n} = Card; //const webSocket = useRef(null);\n// cách khác\n\nconst client = new W3CWebSocket(\"ws://127.0.0.1:8000\");\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      isLoggedIn: false,\n      messages: []\n    };\n\n    this.onButtonClicked = value => {\n      //webSocket.current.send(JSON.stringify(new ChatMessageDto(user, message)))\n      // Bước 2: gửi message lên server\n      client.send(JSON.stringify({\n        type: \"message\",\n        msg: value,\n        user: this.state.userName\n      }));\n      this.setState({\n        searchVal: \"\"\n      });\n    };\n  }\n\n  // useEffect(() => {\n  // webSocket.current = new WebSocket(\"ws://127.0.0.1:8000\")\n  // webSocket.current.onopen = (e) => {\n  //   console.log(\"Open: \", e);\n  // };\n  // webSocket.current.onclose = (e) => {\n  //   console.log(\"Close: \", e);\n  // };\n  //   return () => {\n  //     console.log(\"Closing WebSocket\");\n  //     webSocket.current.close();\n  //   }\n  // }, [])\n  // const [chatMessages, setChatMessages] = useState([])\n  // useEffect(() => {\n  //   webSocket.current.onmessage = (e) => {\n  //     const chatMessageDto = JSON.parse(event);\n  //     console.log(\"Message: \", chatMessageDto);\n  //     setChatMessages([...chatMessages, {user: chatMessageDto.user,message: chatMessageDto.message}])\n  //   }\n  // },[chatMessages])\n  componentDidMount() {\n    // Bước 1: connect với server\n    client.onopen = () => {\n      console.log(\"WebSocket Client Connected\");\n    }; // Bước 3: server respon obj message về cho client, client lưu vào mảng để render ra\n\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log(\"got reply! \", dataFromServer);\n\n      if (dataFromServer.type === \"message\") {\n        this.setState(state => ({\n          messages: [...state.messages, {\n            msg: dataFromServer.msg,\n            user: dataFromServer.user\n          }]\n        }));\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      id: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, this.state.isLoggedIn ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      id: \"main-heading\",\n      type: \"secondary\",\n      style: {\n        fontSize: \"36px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"Websocket Chat: \", this.state.userName)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        paddingBottom: 50\n      },\n      id: \"messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, this.state.messages.map(message => /*#__PURE__*/React.createElement(Card, {\n      key: message.msg,\n      style: {\n        width: 300,\n        margin: \"16px 4px 0 4px\",\n        alignSelf: this.state.userName === message.user ? \"flex-end\" : \"flex-start\"\n      },\n      loading: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        style: {\n          color: \"#f56a00\",\n          backgroundColor: \"#fde3cf\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 23\n        }\n      }, message.user[0].toUpperCase()),\n      title: message.user + \":\",\n      description: message.msg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      placeholder: \"input message and send\",\n      enterButton: \"Send\",\n      value: this.state.searchVal,\n      size: \"large\",\n      onChange: e => this.setState({\n        searchVal: e.target.value\n      }),\n      onSearch: value => this.onButtonClicked(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: \"200px 40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      placeholder: \"Enter Username\",\n      enterButton: \"Login\",\n      size: \"large\",\n      onSearch: value => this.setState({\n        isLoggedIn: true,\n        userName: value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/nguyenty/Desktop/webSocketClient/src/index.js"],"names":["ReactDOM","React","Component","w3cwebsocket","W3CWebSocket","Card","Avatar","Input","Typography","Search","Text","Meta","client","App","state","userName","isLoggedIn","messages","onButtonClicked","value","send","JSON","stringify","type","msg","user","setState","searchVal","componentDidMount","onopen","console","log","onmessage","message","dataFromServer","parse","data","render","fontSize","display","flexDirection","paddingBottom","map","width","margin","alignSelf","color","backgroundColor","toUpperCase","e","target","padding","document","getElementById"],"mappings":"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","sourcesContent":["import ReactDOM from \"react-dom\";\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Card, Avatar, Input, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\n\nconst { Search } = Input;\nconst { Text } = Typography;\nconst { Meta } = Card;\n//const webSocket = useRef(null);\n// cách khác\nconst client = new W3CWebSocket(\"ws://127.0.0.1:8000\");\n\nexport default class App extends Component {\n  // dùng để scrollBottom cho message mới\n  //const scrollBottomRef = useRef(null);\n  state = {\n    userName: \"\",\n    isLoggedIn: false,\n    messages: [],\n  };\n\n  onButtonClicked = (value) => {\n    //webSocket.current.send(JSON.stringify(new ChatMessageDto(user, message)))\n    // Bước 2: gửi message lên server\n    client.send(\n      JSON.stringify({\n        type: \"message\",\n        msg: value,\n        user: this.state.userName,\n      })\n    );\n    this.setState({ searchVal: \"\" });\n  };\n  // useEffect(() => {\n    // webSocket.current = new WebSocket(\"ws://127.0.0.1:8000\")\n    // webSocket.current.onopen = (e) => {\n    //   console.log(\"Open: \", e);\n    // };\n    // webSocket.current.onclose = (e) => {\n    //   console.log(\"Close: \", e);\n    // };\n  //   return () => {\n  //     console.log(\"Closing WebSocket\");\n  //     webSocket.current.close();\n  //   }\n  // }, [])\n  // const [chatMessages, setChatMessages] = useState([])\n  // useEffect(() => {\n  //   webSocket.current.onmessage = (e) => {\n  //     const chatMessageDto = JSON.parse(event);\n  //     console.log(\"Message: \", chatMessageDto);\n  //     setChatMessages([...chatMessages, {user: chatMessageDto.user,message: chatMessageDto.message}])\n  //   }\n  // },[chatMessages])\n  componentDidMount() {\n    // Bước 1: connect với server\n    client.onopen = () => {\n      console.log(\"WebSocket Client Connected\");\n    };\n    // Bước 3: server respon obj message về cho client, client lưu vào mảng để render ra\n    client.onmessage = (message) => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log(\"got reply! \", dataFromServer);\n      if (dataFromServer.type === \"message\") {\n        this.setState((state) => ({\n          messages: [\n            ...state.messages,\n            {\n              msg: dataFromServer.msg,\n              user: dataFromServer.user,\n            },\n          ],\n        }));\n      }\n    };\n  }\n  render() {\n    return (\n      <div className=\"main\" id=\"wrapper\">\n        {this.state.isLoggedIn ? (\n          <div>\n            <div className=\"title\">\n              <Text\n                id=\"main-heading\"\n                type=\"secondary\"\n                style={{ fontSize: \"36px\" }}\n              >\n                Websocket Chat: {this.state.userName}\n              </Text>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                paddingBottom: 50,\n              }}\n              id=\"messages\"\n            >\n              {this.state.messages.map((message) => (\n                <Card\n                  key={message.msg}\n                  style={{\n                    width: 300,\n                    margin: \"16px 4px 0 4px\",\n                    alignSelf:\n                      this.state.userName === message.user\n                        ? \"flex-end\"\n                        : \"flex-start\",\n                  }}\n                  loading={false}\n                >\n                  <Meta\n                    avatar={\n                      <Avatar\n                        style={{ color: \"#f56a00\", backgroundColor: \"#fde3cf\" }}\n                      >\n                        {message.user[0].toUpperCase()}\n                      </Avatar>\n                    }\n                    title={message.user + \":\"}\n                    description={message.msg}\n                  />\n                </Card>\n              ))}\n            </div>\n            <div className=\"bottom\">\n              <Search\n                placeholder=\"input message and send\"\n                enterButton=\"Send\"\n                value={this.state.searchVal}\n                size=\"large\"\n                onChange={(e) => this.setState({ searchVal: e.target.value })}\n                onSearch={(value) => this.onButtonClicked(value)}\n              />\n            </div>\n          </div>\n        ) : (\n          <div style={{ padding: \"200px 40px\" }}>\n            <Search\n              placeholder=\"Enter Username\"\n              enterButton=\"Login\"\n              size=\"large\"\n              onSearch={(value) =>\n                this.setState({ isLoggedIn: true, userName: value })\n              }\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}